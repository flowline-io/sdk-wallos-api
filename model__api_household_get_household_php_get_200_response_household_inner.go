/*
Wallos API

API documentation for Wallos

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner{}

// ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner struct for ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner
type ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner struct {
	Id    *int32  `json:"id,omitempty"`
	Name  *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	InUse *bool   `json:"in_use,omitempty"`
}

// NewApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner instantiates a new ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner() *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner {
	this := ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner{}
	return &this
}

// NewApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInnerWithDefaults instantiates a new ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInnerWithDefaults() *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner {
	this := ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) SetEmail(v string) {
	o.Email = &v
}

// GetInUse returns the InUse field value if set, zero value otherwise.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetInUse() bool {
	if o == nil || IsNil(o.InUse) {
		var ret bool
		return ret
	}
	return *o.InUse
}

// GetInUseOk returns a tuple with the InUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) GetInUseOk() (*bool, bool) {
	if o == nil || IsNil(o.InUse) {
		return nil, false
	}
	return o.InUse, true
}

// HasInUse returns a boolean if a field has been set.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) HasInUse() bool {
	if o != nil && !IsNil(o.InUse) {
		return true
	}

	return false
}

// SetInUse gets a reference to the given bool and assigns it to the InUse field.
func (o *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) SetInUse(v bool) {
	o.InUse = &v
}

func (o ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.InUse) {
		toSerialize["in_use"] = o.InUse
	}
	return toSerialize, nil
}

type NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner struct {
	value *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner
	isSet bool
}

func (v NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) Get() *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner {
	return v.value
}

func (v *NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) Set(val *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner(val *ApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) *NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner {
	return &NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner{value: val, isSet: true}
}

func (v NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHouseholdGetHouseholdPhpGet200ResponseHouseholdInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
