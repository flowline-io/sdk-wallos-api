/*
Wallos API

API documentation for Wallos

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiFixerGetFixerPhpGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiFixerGetFixerPhpGet200Response{}

// ApiFixerGetFixerPhpGet200Response struct for ApiFixerGetFixerPhpGet200Response
type ApiFixerGetFixerPhpGet200Response struct {
	// Indicates whether the request was successful.
	Success *bool `json:"success,omitempty"`
	// The title of the response.
	Title *string `json:"title,omitempty"`
	Fixer *ApiFixerGetFixerPhpGet200ResponseFixer `json:"fixer,omitempty"`
	// Warning messages or additional information.
	Notes []string `json:"notes,omitempty"`
}

// NewApiFixerGetFixerPhpGet200Response instantiates a new ApiFixerGetFixerPhpGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiFixerGetFixerPhpGet200Response() *ApiFixerGetFixerPhpGet200Response {
	this := ApiFixerGetFixerPhpGet200Response{}
	return &this
}

// NewApiFixerGetFixerPhpGet200ResponseWithDefaults instantiates a new ApiFixerGetFixerPhpGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiFixerGetFixerPhpGet200ResponseWithDefaults() *ApiFixerGetFixerPhpGet200Response {
	this := ApiFixerGetFixerPhpGet200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ApiFixerGetFixerPhpGet200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFixerGetFixerPhpGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ApiFixerGetFixerPhpGet200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ApiFixerGetFixerPhpGet200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ApiFixerGetFixerPhpGet200Response) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFixerGetFixerPhpGet200Response) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ApiFixerGetFixerPhpGet200Response) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ApiFixerGetFixerPhpGet200Response) SetTitle(v string) {
	o.Title = &v
}

// GetFixer returns the Fixer field value if set, zero value otherwise.
func (o *ApiFixerGetFixerPhpGet200Response) GetFixer() ApiFixerGetFixerPhpGet200ResponseFixer {
	if o == nil || IsNil(o.Fixer) {
		var ret ApiFixerGetFixerPhpGet200ResponseFixer
		return ret
	}
	return *o.Fixer
}

// GetFixerOk returns a tuple with the Fixer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFixerGetFixerPhpGet200Response) GetFixerOk() (*ApiFixerGetFixerPhpGet200ResponseFixer, bool) {
	if o == nil || IsNil(o.Fixer) {
		return nil, false
	}
	return o.Fixer, true
}

// HasFixer returns a boolean if a field has been set.
func (o *ApiFixerGetFixerPhpGet200Response) HasFixer() bool {
	if o != nil && !IsNil(o.Fixer) {
		return true
	}

	return false
}

// SetFixer gets a reference to the given ApiFixerGetFixerPhpGet200ResponseFixer and assigns it to the Fixer field.
func (o *ApiFixerGetFixerPhpGet200Response) SetFixer(v ApiFixerGetFixerPhpGet200ResponseFixer) {
	o.Fixer = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *ApiFixerGetFixerPhpGet200Response) GetNotes() []string {
	if o == nil || IsNil(o.Notes) {
		var ret []string
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFixerGetFixerPhpGet200Response) GetNotesOk() ([]string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *ApiFixerGetFixerPhpGet200Response) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []string and assigns it to the Notes field.
func (o *ApiFixerGetFixerPhpGet200Response) SetNotes(v []string) {
	o.Notes = v
}

func (o ApiFixerGetFixerPhpGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiFixerGetFixerPhpGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Fixer) {
		toSerialize["fixer"] = o.Fixer
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	return toSerialize, nil
}

type NullableApiFixerGetFixerPhpGet200Response struct {
	value *ApiFixerGetFixerPhpGet200Response
	isSet bool
}

func (v NullableApiFixerGetFixerPhpGet200Response) Get() *ApiFixerGetFixerPhpGet200Response {
	return v.value
}

func (v *NullableApiFixerGetFixerPhpGet200Response) Set(val *ApiFixerGetFixerPhpGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFixerGetFixerPhpGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFixerGetFixerPhpGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFixerGetFixerPhpGet200Response(val *ApiFixerGetFixerPhpGet200Response) *NullableApiFixerGetFixerPhpGet200Response {
	return &NullableApiFixerGetFixerPhpGet200Response{value: val, isSet: true}
}

func (v NullableApiFixerGetFixerPhpGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFixerGetFixerPhpGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


