/*
Wallos API

API documentation for Wallos

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner{}

// ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner struct for ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner
type ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner struct {
	// The unique identifier for the currency.
	Id *int32 `json:"id,omitempty"`
	// The name of the currency.
	Name *string `json:"name,omitempty"`
	// The symbol of the currency.
	Symbol *string `json:"symbol,omitempty"`
	// The ISO code of the currency.
	Code *string `json:"code,omitempty"`
	// The current exchange rate of the currency.
	Rate *string `json:"rate,omitempty"`
	// Indicates if the currency is currently in use.
	InUse *bool `json:"in_use,omitempty"`
}

// NewApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner instantiates a new ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner() *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner {
	this := ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner{}
	return &this
}

// NewApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInnerWithDefaults instantiates a new ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInnerWithDefaults() *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner {
	this := ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) SetName(v string) {
	o.Name = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) SetSymbol(v string) {
	o.Symbol = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) SetCode(v string) {
	o.Code = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetRate() string {
	if o == nil || IsNil(o.Rate) {
		var ret string
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetRateOk() (*string, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given string and assigns it to the Rate field.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) SetRate(v string) {
	o.Rate = &v
}

// GetInUse returns the InUse field value if set, zero value otherwise.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetInUse() bool {
	if o == nil || IsNil(o.InUse) {
		var ret bool
		return ret
	}
	return *o.InUse
}

// GetInUseOk returns a tuple with the InUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) GetInUseOk() (*bool, bool) {
	if o == nil || IsNil(o.InUse) {
		return nil, false
	}
	return o.InUse, true
}

// HasInUse returns a boolean if a field has been set.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) HasInUse() bool {
	if o != nil && !IsNil(o.InUse) {
		return true
	}

	return false
}

// SetInUse gets a reference to the given bool and assigns it to the InUse field.
func (o *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) SetInUse(v bool) {
	o.InUse = &v
}

func (o ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.InUse) {
		toSerialize["in_use"] = o.InUse
	}
	return toSerialize, nil
}

type NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner struct {
	value *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner
	isSet bool
}

func (v NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) Get() *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner {
	return v.value
}

func (v *NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) Set(val *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner(val *ApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) *NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner {
	return &NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner{value: val, isSet: true}
}

func (v NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCurrenciesGetCurrenciesPhpGet200ResponseCurrenciesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


